# Steps to enable this build are:
#
# Generate the OAUTH-TOKEN at https://github.com/settings/applications
# Install travis: gem install travis
# Login to travis: travis login
# Encrypt the token: travis encrypt VAR_NAME=VAR_VALUE -r apereo/cas --add env.global
# Encrypted settings include GPG_PSW, SONATYPE_USER, GPG_PASSPHRASE, SONATYPE_PWD, GH_TOKEN, COVERITY_SCAN_TOKEN

language: java
sudo: required
dist: trusty
services:
- docker
branches:
  only:
  - master
# Enable once Travis CI fixed JDK setup
#jdk:
  #- oraclejdk11
  #- oraclejdk10
before_cache:
- rm -rf $HOME/.gradle/caches/4.*/
- rm -fr $HOME/.gradle/caches/*/plugin-resolution/
- find ~/.gradle/caches/ -name "*.lock" -type f -delete
# Remove once Travis CI fixes JDK setup
before_script:
 - unset -v _JAVA_OPTIONS
 - wget https://github.com/sormuras/bach/raw/master/install-jdk.sh
 - chmod +x install-jdk.sh
 - export JAVA_HOME=$(./install-jdk.sh --emit-java-home -F 10 -c | tail --lines 1)
 - echo $JAVA_HOME
cache:
  bundler: false
  cargo: false
  directories:
  - $HOME/.m2
  - $HOME/.npm/
  - $HOME/.gradle/caches/
  - $HOME/.gradle/wrapper/
git:
  depth: 2
notifications:
  slack:
    secure: "gNFUOGd0isowSwPfQ9VqGQWhWRDAjzX9tfH0xGe2gyg1kiOhq3Odb8fdcUg9f3DhAbiMxGDu08IgmDbeEyncB42Zdqk/DFvD3F958WaVy0O9TF2iAzO+ftBG0+slFHPDZ8qAy97+mV/be7KBkLYP+BydYTVfO84NvpLNiylmOVU="
matrix:
  fast_finish: true
env:
  global:
  - GRADLE_VERSION=4.10
  - JAVA_OPTS="-Xms512m -Xmx2048m -Xss128m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -Xverify:none -server"
  - GRADLE_OPTS="-Xms512m -Xmx1024m -Xss128m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -Xverify:none -server"
  - SPRING_MAIN_BANNER-MODE="off"
  - secure: "ScUSTo0if5m7ddnwUA7EaYucc6yzEUrKLk0DzCvkMfjn2h5taUFSKHx+S0hd2EzJofv+Em4eI5qncSK5LTxgD7HhHR1e3iZp+SqJenhhOnbuciZfg4QA+tUGw3XUdmREac5cz2l0qhi1q4vsnnZARj2d4vvf2HWuNtEOBu/ZAKI="
  - secure: "iWPPLKSS3zBs2adqLPkMiHfCj2hSLyD5BoV3oodhR7Ne83Kpn1khRcEWFoHF3Ed11eSU+glNdPSzUpc8TzwTZGx5B3RU2Qp36hZFyjuzNWJARmoVPYMiEg3FFBQrUR75w+Tbtn6zPkiAk6nl0K5ewmY0/xixVdnTLXL5HjpE2rc="
  - secure: "f3mDIZ8m6NYJXI8KvWD/sZRSeCCyIyfgPRy3Q6o9u9WyHZuYaJf95Ia0eJQ3gxUDS1TKL31Vk08dhFKrfIcKgifFPa2uQ2uyJkvGxlarMTQ+tpqsZYp4zAJgKc9r4xdZasvF2k4xqr+pl9AFjlpXB4jDD59XPXt3DcRABOYA9sM="
  - secure: "A0B1HJoHzvYGT4pPWPW1bQDS3Ne755vZ/VZ20OtVRgJHTTQfK13eKgH0VbYpEyZKJAFIexmaDVQ0XUdNukzrAoI6rKSm5vwam6qjELrvrKH2ovMgd1xvS2a5a1no5OT3QP3TXKKlmOTdS+Q5ZspjslBxpay3q7aKA9GMNvzChko="
  - secure: "o+KTglDoN49U9YawUsInKZ/83xxyeSB+WexfztRR+2dfCr049VXlJyurcE2/FygkentOY5DJU2UAnyZOEjyWoHth0q4MQOjIn0BE53yBFojxvcQPufgIR1Bc/BNaNeU2xRunNf8Rha/E/Dlwg5WdQT60Z0mdyDm7jHwodKxh7d4="
  - secure: "EoYJdh2vb3BIqkfS6UTiVjDci1CMDOgBba8dijE7ebG44rA7BTv/Y9rwi5wSds+bW0m3LvojyxKwD+47tLlRPw7AuuifZJfZvb7cGG+6vXdagU8NNaOuoRc0jMk4R/VlQ4uCN4X7/30FUyFfQl1+BPR/v2Q5YsyBz5kp4romnp8="
  - secure: "KplfTU6f4kYxX3vP1aE5IbLDroK0AznP+jhzM95vqab+tGRodq/6oXjV8dGH3CuolC4E0+zaG2HktUpFIUD85vhUSijK49k4tEJVx5DetDc1JYUb4OniwOaNX+BKOUwbnic1za12MWJF0ZmSZqsRdNulsSevcnGiV/TxhOmnYOk="
before_install:
- unset _JAVA_OPTIONS
- chmod -R 777 ./ci/*.sh
- ./ci/init-travis-build.sh
install: true
script:
- ./ci/script.sh
after_script:
- ./ci/stop.sh
stages:
- initialize
- publish
- build
- test
- dependencies
- spotbugs
jobs:
  include:
  - stage: initialize
    script: ./ci/download-dependencies.sh
    name: "Initialize Build System"
    ############################################
  - stage: publish
    if: NOT commit_message =~ ^\[skip\s+snapshots\] and type != "pull_request" and (branch =~ /^\d+\.\d+\.x$/ or branch = master)
    script: ./ci/publish-snapshots-release.sh
    name: "Publish Artifacts"
  - stage: build
    script: ./ci/build.sh
    name: "Build CAS"
  - stage: build
    script: ./ci/analyze-style.sh
    name: "Checkstyle Analysis"
  - stage: build
    if: type != pull_request
    script: ./ci/analyze-sonarqube.sh
    name: "Sonarqube Analysis"
  - stage: build
    script: ./ci/push-docs-ghpages.sh
    if: type != pull_request and (branch =~ /^\d+\.\d+\.x$/ or branch = master)
    name: "Publish Documentation"
  - stage: build
    script: ./ci/build-javadocs.sh
    name: "Build Javadocs"
  - stage: build
    script: ./ci/build-config-metadata.sh
    name: "Build Configuration Metadata"
  - stage: build
    script: ./ci/check-config-factories.sh
    name: "Configuration Factory Analysis"
    ############################################
  - stage: dependencies
    script: ./ci/analyze-dependencies.sh
    name: "Dependency Security Analysis"
  - stage: dependencies
    if: type != pull_request and (branch =~ /^\d+\.\d+\.x$/ or branch = master)
    script: ./ci/report-dependency-updates.sh
    name: "Dependency Update Report"
    ############################################
  - stage: test
    script: ./ci/tests/run-tests-simple.sh
    name: "Simple Unit Tests"
after_success:
  - bash <(curl -s https://codecov.io/bash)
