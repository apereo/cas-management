# Steps to enable this build are:
#
# Generate the OAUTH-TOKEN at https://github.com/settings/applications
# Install travis: gem install travis
# Login to travis: travis login
# Encrypt the token: travis encrypt VAR_NAME=VAR_VALUE -r apereo/cas --add env.global
# Encrypted settings include

language: java
sudo: required
dist: trusty
services:
  - docker
branches:
  only:
    - master
before_cache:
  - rm -rf $HOME/.gradle/caches/5.*/
  - rm -rf $HOME/.gradle/caches/4.*/
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
  - find ~/.gradle/caches/ -name "*.lock" -type f -delete
cache:
  bundler: false
  cargo: false
  directories:
    - $HOME/.m2
    - $HOME/.npm/
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
git:
  depth: 2
notifications:
  slack:
    secure: "gNFUOGd0isowSwPfQ9VqGQWhWRDAjzX9tfH0xGe2gyg1kiOhq3Odb8fdcUg9f3DhAbiMxGDu08IgmDbeEyncB42Zdqk/DFvD3F958WaVy0O9TF2iAzO+ftBG0+slFHPDZ8qAy97+mV/be7KBkLYP+BydYTVfO84NvpLNiylmOVU="
matrix:
  fast_finish: true
env:
  global:
  - JAVA_OPTS="-Xms512m -Xmx4048m -Xss128m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -Xverify:none -server"
  - GRADLE_OPTS="-Xms512m -Xmx1024m -Xss128m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC -Xverify:none -server"
  - SPRING_MAIN_BANNER-MODE="off"
  - secure: "AAnmGEX+rY+xeqcDMCn+LWMResj5gs/4pkmQLFUBsNx1XRKNEbi8oELs4dUm09QzTjKh9eEtUw/fVi6fskuXq4pOfc/DffqK1h0C7yClcorM6HSc+QnHcRwp2oZaGzQ6D+T5LdzAIwsjYoF3JwFkIOKw65LN8QdHiA1b0kZsM3qNgP7T94X4LFnilbmCF+KDyabFgI5KiupGH41VHRZkNgcop4xdu5OHTfO85YTSOgMERExGYQkfkd0BPIeYzxXxD9dgRPSxpYX3K/7CMs3/zMOcQ8ZGMWbQbgAbN45t5xelzsg0L2bw59Q5mOwWXFBlTD/tgBE5+1dVTQnKfU+NBlCn+ZViFi/6aebsaOwbFVF9ZKmFpMZrpcQILDkmN6p7q7gvV1OXwGuNYXTu7dpJi2B5rSNYp71B9IKU33qh9sxJnAM7Q6VDvZ9swcZbgmgnQnX0HUwHz43serFUAfJJUPtv2A8NoIKjdiifKXHahdgggIDrh4zVDvKRROP/1z1tNVN0q442YJNjAsKmtfzs0yeqdN9b7ztEOiW9C/tXjha4EXp7gqrp5Klh69I6r9OM5Xk+7wIoy6GX1t+iro+25lYdQGmIA5SpFhPyWELZtlvelpaCu0EqS7b6tjN2qMKNvB2Tpz7nWoW3M9xHj+WLnt7ScBJ3aoX0I5S1qMON7eQ="
  - secure: "ZIeb/jh9phBVQEVJYewa4h1Q2Ov49qiNJTPNJ3gmoR0QMB4gHmn99rp9bgNaH5BrVK+IdmOksWqVsl7VZDWPwqxM+6m/ioAD9LR3XoeIr5oc+tgImuP0vCKOqpYnL6mozCt70C5p03cDv70pa9RfBOhSqVORkWNC1w5xRk4QKh66ntci30ibDjF7469+B4GIMGopbl7mjxHGiGb5SAl0diNqEzqVoaTUDi9/9FBe3s9TKup8dPQgNj0OIfhIaf3NrAkfUQVIuUUrRUkMR84mi93m1NCOnz/BHcshCeQaOXxJQD2TcUiCmEB7hoplhE18Nkmd/1Ha5TP8GfxJF1vRUiKWA6Sv22FH5b5/uMDjYoqw0EiFcy1isv+wBn1vmfNMZR4FYJQS0oxkcqegstF3L5+ZReCZatFnbS59DoId8vlRd0U+Ul6qZa7depQa5m2Z18HtC7bLoRML5MFsFs4ndRDpgMJvRyfkVTXpHnCbEgT6RqqeUz/36ZqupI7TEBz0Dn0wWpbe+OhK9+iBwogbYihEKwrrN+p0q3P8SjXbemjOLJaA1LsVe+vHxdVukvTbxypvwrt6MYocjgT4RsL0uTwRX5V6nRY2d7CkVIcx/DrnsoDLt4j8LmM9au8XmZHOyP4Z/mqp01hlh05VyTyL7iINJcgaJT2jCRESfD7MUpA="
  - secure: "2r8sjiU6FOaaNiEdefUZ0wUA7DN9p37X3742yj52WriUd2EqjmHIm0lndJDyGgxoKq4EdZtey3pe3fhKLJIsTYKucDeE6IQQ91ptwW7C7QoPozvkPsdhVHOVvIbekx/TJ/tSzZjrwXHEj03PvgyheVlwMkWQJbneETq/BIRSh9he55Nq1whnZDv/J9j8hHWrKRWqpNyRYW6jAvF7CzKTdlvvKNYX/Wid33f93VTQ4pH/gL0ndW0jDcBLbTqZ9p+DhY8m5+Wir6MjWf4dV2ObKnIAABGedknuOO6W4zZUJE6f6vAo7RWBcG0/ZXpvrJRQ5hXjv68x8IaXIQkEa5kCXn9FHSswz8GfGU5w0XMpxNbCv4Eb3k0Ty9FAAY4YSRVltwK8OA/e8NbNgTkQWenzHitAHh6IjMTUfUygS47M/3ws36/F8rwu2R10COqxaeKS5TFSUue9obuVVOWvT9Z2bOVeCRhKSdWs+2XpbsecjJJgwIkxMFum66iGVc2DhK7JbHjfVWV7rFy2uCK6JU3/qsRmYsy856lBiMcknuJt+UHb+oIJJX0m1iesTANPKspRMjN6MXgRb59989kOGnk2tlv7XN39DmBxAFNePaGyNdOgllXJJ1N+vT13clJQXkLeNGyPIbSYo15aTtgpMmrdtCfn9MWnE3tVjlyZb+APe1Y="
  - secure: "yXHv0eLXSehCHONr5nOWtXqX6KCe19LlaXq/yLWeBl5kWxKCOSfU1lC3YSpVL9jIjhChn/DoBiwcpYPn2CmsftkySelhWLgdtwwIzHqSGhsPq6GX6/JJH8cwfQiZoiqLvAHOEinbk66lyxLg9lmDjbfJtIYDwBU7JmXbejO1cmkKCSjhwOI+24N8uXUikHpr2QqEFtRkzB4Q00w9LQXFSLrjru1wTkKrbbcFP0VLphjBlwsg2Ed1JqotaxQ0PirenpmncScnk497rSc0QHv0+UoBtHtN9J4M8yjH2lTpI4QOF/3c5kZCznZpCKCiPlrM/wcWpi9MbllPrkQuTwmIJ7X1J5Q0IF38r0m5YaRp2Kxqb2sR4AKQq3xtgDbPEzSt6l4e+PXdPalIDn4/SuaOBFZhBVipDEpXJ7snnOcisUpyszaMuMD+8Zu1N/umJL0fLrfRSa+o+FPIUwlIk4dLAztN6kMv2aBLsI9SvDo+Jk2Q7egA7lBJXMpGFoGB8HrVf7GUPnGOmgXPFeU+yySVJTAACpRoQoFOywsPt8JPBcg96TI3sWdrzlzreX5aIUAt8zeXNn9Q7oQP4CnmisEqfvGpvVdSv50lLztnDe01fBRX2/5M32V0RgYj9ZDk9mbF5saKZoB1FfEhrYS4RG00wsxRXZHHIKGYKxNxCTDKewU="
  - secure: "QR0UFpjrOnL+SYfnziW0VRQEMe9MweUwzzC0bYFjgMeq7kRKHGMNn9zOGLWa2fZcKglThjhghBtZ8044SgI5pML+QSHfYiFrrQ+VYJ/05mWrv2z2WUdJPIpdFtqTwL6XP8A9hyrw3bnF5GOC1LvCPPwVp2QGuEOTqFx6EMl0dOKsI3X4q3hT8pjprDVMt9kyjFTG6IMin3OMhQLH/hhxOm8zWyMDaIKYEAuJtK9CuEO5uVAIED57X1koJSub3LuRrRRQluxhYFhwJQ7yQATme2E8SiGmL0mZ6p0HF3IAvYy4FDelYgbwqjJWP7vfRhmG6vmrcRFcgevnw5cjjm2AUJzF4gHID8tvAhIoc33uwSV4y7iJLxDvtp8UdE/I3C1PnQdw0j94hcE+mE0X5LvxWY05drd9RcMxMoM5aWBE/t4IaCn8f3Sjgs3o++GDIyHisCoApKt8nhEjOT7K2OhNFlDKQFVCAv6pJRy3GUqxMSvwWcJSiK41LfIGoTC3FJQTBH8qbBJ605nC5hqrB+c6gTrPXq6/313JYx5mqONJoE1NbtxEi5qckGfYfXZHckERvI0Vi6EuEWVc3UES+MqQzn7zcYLfzF6ySmO4qnOBXmqIHNkzLkZVy94fWuqlsyXyPTvTmi9ZyoYrlqLY0ZnHJVJK19JLiifs2+30G6dRaxA="
jdk:
  - openjdk11
before_install:
  - unset _JAVA_OPTIONS
  - ./ci/init-travis-build.sh
install: true
script:
  - ./ci/script.sh
after_script:
  - ./ci/stop.sh
stages:
  - initialize
  - publish
  - build
  - postbuild
  - test
  - dependencies
  - spotbugs
jobs:
  include:
  - stage: initialize
    script: ./ci/download-dependencies.sh
    name: "Initialize Build System"
    ############################################
  - stage: publish
    if: NOT commit_message =~ ^\[skip\s+snapshots\] and type != "pull_request" and (branch =~ /^\d+\.\d+\.x$/ or branch = master)
    script: ./ci/publish-snapshots-release.sh
    name: "Publish SNAPSHOT Artifacts"
    ############################################
  - stage: build
    script: ./ci/build.sh
    name: "Build CAS Management"
    ############################################
  - stage: postbuild
    script: ./ci/analyze-sonarqube.sh
    if: type != pull_request
    name: "SonarCloud Analysis"
  - stage: postbuild
    script: ./ci/analyze-style.sh
    name: "Checkstyle Analysis"
  - stage: postbuild
    script: ./ci/push-docs-ghpages.sh
    if: type != pull_request and (branch =~ /^\d+\.\d+\.x$/ or branch = master)
    name: "Publish Documentation"
  - stage: postbuild
    script: ./ci/build-javadocs.sh
    name: "Build Javadocs"
  - stage: postbuild
    script: ./ci/check-config-factories.sh
    name: "Configuration Factory Analysis"
    ############################################
  - stage: dependencies
    script: ./ci/analyze-dependencies.sh
    name: "Dependency Security Analysis"
  - stage: dependencies
    if: type != pull_request and (branch =~ /^\d+\.\d+\.x$/ or branch = master)
    script: ./ci/report-dependency-updates.sh
    name: "Dependency Update Report"
    ############################################
  - stage: test
    script: ./ci/tests/run-tests-simple.sh
    name: "Simple Unit Tests"
