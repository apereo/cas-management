apply plugin: "com.moowork.node"

node {
    version = "${nodeVersion}"
    nodeModulesDir = rootProject.file("webapp/cas-mgmt-webapp-client")
    download = true
}

npm_update {
    args = ['--production', '--loglevel', 'warn']
}

if (!Boolean.getBoolean("skipNpmCache")) {
    npm_install.dependsOn(npm_cache_verify)
} else {
    npm_install.enabled = false
}

if (!Boolean.getBoolean("skipNodeModulesCleanUp")) {
    //clean.delete << new File(project(":webapp").projectDir, "node_modules")
    //clean.delete << fileTree(dir: project(":webapp").projectDir.getPath() + '/resources/static/js', include: '*-bundle.js')
} else {
    logger.info("Skipping node_modules cleanup...")
}

task buildLibrary(type: NpmTask, dependsOn: "npm_install",
        description: "Compile client side library") {
    args = ['run', 'build', 'mgmt-lib']
    enabled = !Boolean.getBoolean("skipClientBuild")
}

task buildClientDev(type: NpmTask, dependsOn: "buildLibrary",
        description: "Compile client side folder for development") {
    args = ['run', 'buildBase', mgmtUrl, 'management']
    enabled = !Boolean.getBoolean("skipClientBuild")
}

task buildClient(type: NpmTask, dependsOn: "buildLibrary",
        description: "Compile client side folder for production") {
    args = ['run', 'buildBase', mgmtUrl, 'management']
    enabled = !Boolean.getBoolean("skipClientBuild")
}

task ngLint(type: NpmTask, dependsOn: "npm_install",
        description: "Runs Angular TypeScript and HtML Linting") {
    args = ['run', 'lint']
}


