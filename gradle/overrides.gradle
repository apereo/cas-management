configurations.all {
    resolutionStrategy {
        if (!Boolean.getBoolean("skipVersionConflict")) {
            failOnVersionConflict()
        }
        preferProjectModules()

        cacheDynamicVersionsFor 5, 'days'
        cacheChangingModulesFor 5, 'days'

        def dependencyUpdates = gradle.startParameter.taskNames.any {task -> task.equalsIgnoreCase('dependencyUpdates') }
        if (!dependencyUpdates) {
            eachDependency { DependencyResolveDetails details ->
                def requested = details.requested
                if (requested.group == "org.springframework")  {
                    details.useVersion("${springVersion}")
                }
                if (requested.group == "org.apache.tomcat")  {
                    details.useVersion("${tomcatVersion}")
                }
                if (requested.group == "org.apache.logging.log4j")  {
                    details.useVersion("${log4jVersion}")
                }
                if (requested.group == "org.slf4j")  {
                    details.useVersion("${slf4jVersion}")
                }
                if (requested.group == "org.codehaus.groovy")  {
                    details.useVersion("${groovyVersion}")
                }
                if (requested.group == "org.thymeleaf")  {
                    details.useVersion("${thymeleafVersion}")
                }
                if (requested.group == "org.springframework")  {
                    details.useVersion("${springVersion}")
                }
                if (requested.group.startsWith("com.fasterxml.jackson"))  {
                    details.useVersion("${jacksonVersion}")
                }
            }
        }
    }
    exclude(group: "cglib", module: "cglib")
    exclude(group: "cglib", module: "cglib-full")
    exclude(group: "org.slf4j", module: "slf4j-log4j12")
    exclude(group: "org.slf4j", module: "slf4j-simple")
    exclude(group: "org.slf4j", module: "jcl-over-slf4j")
    exclude(group: "org.slf4j", module: "jul-to-slf4j")
    exclude(group: "org.apache.logging.log4j", module: "log4j-to-slf4j")
    exclude(group: "commons-logging", module: "commons-logging")
    exclude(group: "pull-parser", module: "pull-parser")
    exclude(group: "javax.servlet", module: "servlet-api")
    exclude(group: "commons-logging", module: "commons-logging")
    exclude(group: "com.github.mmoayyed.cxf")
    exclude(group: "org.apache.wss4j")
}

ext["log4j2.version"] = ext["log4jVersion"]
